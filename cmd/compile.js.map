{
  "version": 3,
  "file": "compile.js",
  "sourceRoot": "/Users/Sergey/Work/GH/ecmal/elp/src",
  "sources": [
    "compile.ts"
  ],
  "names": [],
  "mappings": ";;IAmBA;QAqBI,yBAAO,GAAP,UAAQ,IAAoB;YAApB,oBAAoB,GAApB,OAAY,IAAI,CAAC,GAAG;YACxB,IAAI,OAAO,GAAW,iBAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAEzC,EAAE,CAAA,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA,CAAC;gBACZ,OAAO,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;YACtC,CAAC;YAED,EAAE,CAAA,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA,CAAC;gBACX,OAAO,CAAC,IAAI,CAAC,iBAAc,OAAO,CAAC,IAAI,kBAAW,OAAO,CAAC,SAAS,OAAG,CAAC,CAAC;gBACxE,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC9B,CAAC;YAAA,IAAI,CAAA,CAAC;gBACF,OAAO,CAAC,IAAI,CAAC,iBAAc,OAAO,CAAC,IAAI,kBAAW,OAAO,CAAC,SAAS,OAAG,CAAC,CAAC;gBACxE,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAChC,CAAC;QACL,CAAC;;;;;oDAjCD;gBAAA,CAAC,gBAAM,CAAC;oBACJ,KAAK,EAAM,GAAG;oBACd,KAAK,EAAM,6BAA6B;iBAC3C,CAAC;YAAA;qDAGF;gBAAA,CAAC,gBAAM,CAAC;oBACJ,KAAK,EAAM,GAAG;oBACd,IAAI,EAAO,KAAK;oBAChB,KAAK,EAAM,kBAAkB;iBAChC,CAAC;YAAA;oDAGF;gBAAA,CAAC,gBAAM,CAAC;oBACJ,KAAK,EAAM,GAAG;oBACd,KAAK,EAAM,eAAe;iBAC7B,CAAC;YAAA;;;;;8DA/BN;gBAAA,CAAC,iBAAO,CAAC;oBACL,KAAK,EAAI,iBAAiB;oBAC1B,IAAI,EAAK,QAAQ;oBACjB,KAAK,EAAI,CAAC,kMAQT,CAAC;iBACL,CAAC;YAAA;;QAsCF,cAAC;QArCD;YAA6B,+BAAG;YAM5B,UAAK,GAAS,KAAK,CAAC;YAOpB,WAAM,GAAS,KAAK,CAAC;YAMrB,UAAK,GAAS,KAAK,CAAC;QAkBxB,CAAC;IAAD,CAAC,AArCD,IAqCC;;IArCD,iCAqCC,CAAA;;;;;;;;;;;;YArCD,sBAAA,QAA6B,aAqC5B",
  "sourcesContent": [
    "import {Command} from './command';\nimport {Option} from './command';\nimport {Cli} from \"./command\";\n\nimport {Project} from \"../models/project\";\n\n@Command({\n    title  : 'Compile Project',\n    args   : '[path]',\n    usage  : [`\n    Usage :\n    |  elp compile [options] [path]\n    |\n    Examples :\n    |  elp compile\n    |  elp compile ./my-module\n    |  elp compile -o ./my/out/dir ./my-module/package.json\n    `]\n})\nexport class Compile extends Cli {\n\n    @Option({\n        alias    : 'w',\n        title    : 'Watch files for compilation'\n    })\n    watch:boolean=false;\n\n    @Option({\n        alias    : 'o',\n        args     : 'dir',\n        title    : 'Output directory'\n    })\n    output:boolean=false;\n\n    @Option({\n        alias    : 't',\n        title    : 'Include Tests'\n    })\n    tests:boolean=false;\n\n    execute(path:string=this.cwd){\n        var project:Project = Project.read(path);\n\n        if(this.output){\n            project.dirs.vendor = this.output;\n        }\n\n        if(this.watch){\n            console.info(`Watching  \"${project.name}\" into \"${project.vendorDir}\"`);\n            project.watch(this.tests);\n        }else{\n            console.info(`Compiling \"${project.name}\" into \"${project.vendorDir}\"`);\n            project.compile(this.tests);\n        }\n    }\n\n}"
  ]
}