{
  "version": 3,
  "file": "compiler.js",
  "sourceRoot": "/Users/Sergey/Work/GH/ecmal/elp/src",
  "sources": [
    "compiler.ts"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "import {Project} from \"../models/project\";\nimport {Source} from \"../models/source\";\nimport TS from \"compiler/index\";\nimport FileSystem from \"../utils/fs\";\n\nexport class Compiler implements TS.CompilerHost {\n    fileExists(fileName:string):boolean {\n        console.info('CompilerHost.fileExists');\n        return false;\n    }\n    readFile(fileName:string):string {\n        console.info('CompilerHost.readFile');\n        return null;\n    }\n    getSourceFile(fileName: string, target: TS.ScriptTarget, onError?: (message: string) => void): TS.SourceFile {\n        var uri = Source.getName(fileName);\n        if(fileName=='$.d.ts'){\n            var definitions = [],defs=[];\n            Object.keys(this.sources).forEach(s=>{\n                var source = this.sources[s];\n                if(source.name =='package' && source.tsd && source.tsd.content &&\n                    !(this.project.bundle && source.project==this.project.name)){\n                    defs.push(`${source.project}/${source.name}.d.ts`);\n                    definitions.push(`//${source.project}/package.d.ts`);\n                    definitions.push(source.tsd.content.toString());\n                }\n            });\n            //console.info(defs);\n            return TS.createSourceFile(fileName,definitions.join('\\n'),target);\n        }else{\n            var source = this.sources[uri];\n            if(source){\n                //console.info(fileName);\n                return TS.createSourceFile(fileName,source.content,target);\n            }\n        }\n    }\n    getDefaultLibFileName(options: TS.CompilerOptions): string {\n        return `$.d.ts`;\n    }\n    writeFile(fileName: string, data: string, writeByteOrderMark: boolean, onError?: (message: string) => void): void{\n        fileName = fileName.replace('./','');\n        if(fileName.indexOf(this.project.name+'/')==0){\n            fileName = fileName.replace(this.project.name+'/','');\n        }\n        var name = Source.getName(fileName);\n        var ext = Source.getExt(fileName);\n        var source = this.project.sources[name];\n        if(!source){\n            source = this.project.sources[name] = new Source(this.project.name,name,true);\n        }\n\n        if(ext=='.js.map'){\n            try {\n                var map = JSON.parse(data);\n                map.sourceRoot = source.dirname||this.project.sourceDir;\n                //delete map.sourceRoot;\n                if(map.sources.length>0) {\n                    map.sources = map.sources.map(n=> {\n                        var name = Source.getName(n);\n                        var ext = Source.getExt(n);\n                        var src = this.sources[name];\n                        if(src) {\n                            return src.name + ext;\n                        }else{\n                            return n;\n                        }\n                    });\n                }\n                data = JSON.stringify(map, null, 2);\n            }catch(e){\n                console.info(e.stack);\n                console.info(fileName,ext);\n                console.info(data);\n            }\n        }\n\n\n        source.addFile({\n            name    : name,\n            ext     : ext,\n            content : new Buffer(data)\n        });\n    }\n    getCurrentDirectory(): string{\n        return '.';\n    }\n    getCanonicalFileName(fileName: string): string{\n        return fileName;\n    }\n    useCaseSensitiveFileNames(): boolean{\n        return true;\n    }\n    getNewLine(): string {\n        return '\\n';\n    }\n    resolveModuleName(dirName,modName){\n        modName = modName.replace(/(\\.d)?\\.(ts|js)$/,'');\n        modName = FileSystem.resolve('/'+dirName,modName).substr(1);\n\n        var src = this.sources[modName];\n        if(src) {\n            if (src.ts) {\n                modName = modName + '.ts'\n            } else if (src.tsx) {\n                modName = modName + '.tsx'\n            } else if (src.tsd) {\n                modName = modName + '.d.ts'\n            }\n        }\n        return modName;\n    }\n    resolveModuleNames(moduleNames: string[], containingFile: string){\n        var containingDir:string = FileSystem.dirname(containingFile);\n        return moduleNames.map(moduleName=>{\n            var isRelative = moduleName[0]=='.';\n            var isExternalLibraryImport = containingDir.indexOf(this.project.name)!=0;\n            var resolvedFileName;\n            if(isRelative){\n                resolvedFileName = this.resolveModuleName(containingDir,moduleName);\n            }else{\n                resolvedFileName = this.resolveModuleName('',moduleName);\n            }\n            return {\n                resolvedFileName,\n                isExternalLibraryImport\n            };\n        });\n    }\n\n    private project:Project;\n    private program:TS.Program;\n    private sources:{[k:string]:Source};\n\n    constructor(project){\n        this.project = project;\n        this.program = null;\n        this.sources = {};\n    }\n    get options():TS.CompilerOptions{\n        var modFormat:TS.ModuleKind  = TS.ModuleKind.System;\n        if(this.project.format){\n            switch(this.project.format.toUpperCase()){\n                case 'AMD'      :modFormat=TS.ModuleKind.AMD;break;\n                case 'COMMONJS' :modFormat=TS.ModuleKind.CommonJS;break;\n                case 'ES6'      :modFormat=TS.ModuleKind.ES6;break;\n                case 'ES2015'   :modFormat=TS.ModuleKind.ES2015;break;\n                case 'NONE'     :modFormat=TS.ModuleKind.None;break;\n                case 'SYSTEM'   :modFormat=TS.ModuleKind.System;break;\n                case 'UMD'      :modFormat=TS.ModuleKind.UMD;break;\n            }\n        }\n        var modTarget:TS.ScriptTarget  = TS.ScriptTarget.ES5;\n        if(this.project.target){\n            switch(this.project.target.toUpperCase()){\n                case 'ES3'      :modTarget=TS.ScriptTarget.ES3;break;\n                case 'ES5'      :modTarget=TS.ScriptTarget.ES5;break;\n                case 'ES6'      :modTarget=TS.ScriptTarget.ES6;break;\n                case 'ES2015'   :modTarget=TS.ScriptTarget.ES2015;break;\n                case 'Latest'   :modTarget=TS.ScriptTarget.Latest;break;\n            }\n        }\n        if(this.project.bundle){\n            console.info(`${this.project.name}/${this.project.bundle}`);\n        }\n        return <TS.CompilerOptions> {\n            jsx                     : TS.JsxEmit.React,\n            reactNamespace          : 'Reflect',\n            experimentalDecorators  : true,\n            emitDecoratorMetadata   : true,\n            module                  : modFormat,\n            target                  : modTarget,\n            stripInternal           : true,\n            declaration             : true,\n            outDir                  : \".\",\n            rootDir                 : \".\",\n            sourceMap               : true,\n            inlineSources           : true,\n            noLib                   : this.project.core != 'core',\n            outFile                 : this.project.bundle ? `${this.project.name}/${this.project.bundle}` : undefined\n        }\n    }\n    compile(){\n        this.sources = {};\n        this.project.sourcesAll.forEach(s=>{\n            this.sources[s.uri] = s;\n        });\n        var sources = this.project.sourcesSelf.filter(s=>s.ts||s.tsx).map(s=>s.uri+(s.tsx?'.tsx':(s.ts?'.ts':'.d.ts')));\n        this.program = TS.createProgram(sources,this.options,this,this.program);\n        var diagnostics:Array<TS.Diagnostic> = [];\n        var result = this.program.emit();\n        this.program.getSourceFiles().forEach(s=>{\n            var d = [];\n            d = d.concat(this.program.getSyntacticDiagnostics(s)||[]);\n            d = d.concat(this.program.getDeclarationDiagnostics(s)||[]);\n            d = d.concat(this.program.getSemanticDiagnostics(s)||[]);\n            if(d.length) {\n                diagnostics = diagnostics.concat(d)\n            }\n        });\n        diagnostics = diagnostics.concat(this.program.getGlobalDiagnostics());\n        diagnostics = diagnostics.concat(this.program.getOptionsDiagnostics());\n\n        if(result.diagnostics && result.diagnostics.length){\n            diagnostics = diagnostics.concat(result.diagnostics);\n        }\n        diagnostics = diagnostics.filter(d=>(d && d.code!=1166)).sort((a,b)=>{\n            if(a.file && b.file){\n                return a.file.fileName== b.file.fileName?0:(\n                    a.file.fileName>b.file.fileName?1:-1\n                )\n            }else{\n                return 0;\n            }\n        });\n        if(diagnostics.length>0){\n            let len:number = Math.min(10,diagnostics.length);\n            for(let dk=0;dk<len;dk++){\n                let d:TS.Diagnostic = diagnostics[dk];\n                var category = '';\n                switch(d.category){\n                    case TS.DiagnosticCategory.Error   :category='Error';   break;\n                    case TS.DiagnosticCategory.Warning :category='Warning'; break;\n                    case TS.DiagnosticCategory.Message :category='Message'; break;\n                }\n                var file = ' - ';\n                if(d.file){\n                    let { line, character } = d.file.getLineAndCharacterOfPosition(d.start);\n                    file = ` '${d.file.fileName}:${line+1}:${character+1}' - `;\n                }\n                var message = TS.flattenDiagnosticMessageText(d.messageText, '\\n  ');\n                console.info(`  ${category} ${d.code}${file}${message}`);\n            }\n            if(diagnostics.length>len){\n                console.info(`  ... ${diagnostics.length-len} more`);\n            }\n        }\n        return diagnostics;\n    }\n}\n\n\n"
  ]
}