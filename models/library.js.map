{
  "version": 3,
  "file": "library.js",
  "sourceRoot": "/Users/Sergey/Work/GH/ecmal/elp/src",
  "sources": [
    "library.ts"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "import {Url} from \"./url\";\nimport {Registry} from \"./registry\";\nimport {Repository} from \"../utils/git\";\nimport FileSystem from \"../utils/fs\";\nimport config from \"../config\";\n\nconst URL:symbol = Symbol('url');\nconst GIT:symbol = Symbol('git');\nconst REGISTRY:symbol = Symbol('registry');\n\nexport class Library {\n\n    static get home():string{\n        return FileSystem.resolve(config.home,'registry');\n    }\n\n    static local(url:Url){\n        return FileSystem.resolve(this.home,url.vendor,url.project+'.git');\n    }\n    static clear(){\n        FileSystem.removeDir(this.home);\n    }\n    static list(){\n        var libs = [];\n        if(FileSystem.isDir(this.home)){\n            FileSystem.readDir(this.home,false,true).forEach(v=>{\n                var vendor = FileSystem.relative(this.home,v);\n                FileSystem.readDir(v,false,true).forEach(p=>{\n                    var project = FileSystem.basename(p,'.git');\n                    libs.push(new Url(`${vendor}/${project}`));\n                })\n            });\n        }\n        return libs;\n    }\n    static get(url){\n        return new Library(url);\n    }\n    static show(url){\n        var u = Url.parse(url);\n        var registry = Registry.get(u);\n        var remote = registry.remote(u);\n        var refs = Repository.refs(remote);\n        var release = 'release';\n        var source  = (()=>{\n            for(var branch of Object.keys(refs.heads)){\n                if(refs.heads[branch] == refs.head){\n                    return branch;\n                }\n            }\n            return refs.heads[0];\n        })();\n        if(refs.tags) {\n            var versions = Object.keys(refs.tags).map(v=> {\n                return {\n                    version: v,\n                    sha: refs.tags[v]\n                }\n            });\n        }\n        var local = Library.local(u);\n        return {\n            name       : u.project,\n            vendor     : u.vendor,\n            remote     : remote,\n            local      : local,\n            exist      : FileSystem.isDir(local),\n            registry   : registry.id,\n            source     : {\n                name   : source,\n                sha    : refs.heads[source]\n            },\n            release    : {\n                name   : release,\n                sha    : refs.heads[release]\n            },\n            versions   : versions,\n            refs:refs\n        }\n    }\n    static install(url){\n        Library.get(Url.parse(url)).install();\n    }\n    constructor(url){\n        this[URL] = Url.parse(url);\n    }\n    get url():Url{\n        return this[URL];\n    }\n    get registry():Registry{\n        var v = this[REGISTRY];\n        if(!v){\n            v = this[REGISTRY] = Registry.get(this.url);\n        }\n        return v;\n    }\n    get local(){\n        return Library.local(this.url);\n    }\n    get remote(){\n        return this.registry.remote(this.url);\n    }\n    get installed(){\n        return FileSystem.isDir(Library.local(this.url));\n    }\n    get versions(){\n        var refs = this.git.refs();\n        var versions = {};\n        Object.keys(refs.tags).forEach(t=>{\n            versions[t] = refs.tags[t];\n        });\n        Object.keys(refs.releases).forEach(v=>{\n            var release = refs.releases[v];\n            Object.keys(release).forEach(c=>{\n                if(versions[v]!=release[c]){\n                    versions[v+'-'+c] = release[c];\n                }\n            });\n        });\n        return versions;\n    }\n    get git():Repository {\n        var v:Repository = this[GIT];\n        if(!v){\n            v = this[GIT] = new Repository(this.local);\n        }\n        return v;\n    }\n    toString(){\n        return `Library(${this.url.url})`\n    }\n    inspect(){\n        return this.toString();\n    }\n    info(){\n\n    }\n    install(dev?:boolean){\n        if(!this.git.initialized){\n            this.git.init();\n        }\n        var remotes = this.git.remotes();\n        if(!remotes[this.registry.id]){\n            this.git.exec('config','--local',`remote.${this.registry.id}.url`,this.registry.remote(this.url));\n            this.git.exec('config','--local','--add',`remote.${this.registry.id}.fetch`, `+refs/tags/*:refs/tags/*`);\n            this.git.exec('config','--local','--add',`remote.${this.registry.id}.fetch`, `+refs/releases/*:refs/releases/*`);\n            if(dev) {\n                this.git.exec('config', '--local', '--add', `remote.${this.registry.id}.fetch`, `+refs/heads/*:refs/remotes/${this.registry.id}/*`);\n            }\n        }\n        /*this.git.setConfig({\n            [`remote.${this.registry.id}.url`]:this.registry.remote(this.url),\n            [`remote.${this.registry.id}.fetch`]:[\n                `+refs/tags/*:refs/tags/*`,\n                `+refs/release/*:refs/release/*`\n            ]\n        });*/\n\n        console.info(JSON.stringify(this.git.config(),null,2));\n        console.info(this.git.fetch(this.registry.id));\n    }\n    fetch(){\n        this.git.exec('fetch',this.registry.id);\n    }\n    extract(dir:string){\n        var versions = this.versions;\n        if(versions[this.url.version]){\n            var map = this.git.readDir(versions[this.url.version]);\n            var files = Object.keys(map).map(f=>{\n                var file = FileSystem.resolve(dir,this.url.project,map[f].path);\n                var content = this.git.readFile(map[f].sha);\n                FileSystem.writeFile(file,content);\n            });\n        }\n    }\n    workdir(path,branch?,remote?){\n        var result;\n        this.git.exec('worktree','prune');\n        if(branch){\n            result = this.git.exec('worktree','add','-B',branch,path,remote).output\n        }else{\n            result = this.git.exec('worktree','add',path).output\n        }\n        console.info(result);\n    }\n    remove(){\n        FileSystem.removeDir(this.git.path);\n    }\n    files(version){\n        return this.git.readDir(version);\n    }\n    cached(){\n        console.info(this.url.registry,this.url.vendor,this.url.project);\n    }\n}"
  ]
}