{
  "version": 3,
  "file": "url.js",
  "sourceRoot": "/Users/Sergey/Work/GH/ecmal/elp/src",
  "sources": [
    "url.ts"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "const NREG = '[a-zA-Z][a-zA-Z0-9_$\\\\-\\\\.]*';\nconst VREG = 'v?[^]?(?:0|[1-9][0-9]*)\\\\.(?:0|[1-9][0-9]*|x)\\\\.(?:0|[1-9][0-9]*|x)(?:-[\\\\da-z\\\\-]+(?:\\\\.[\\\\da-z\\\\-]+)*)?(?:\\\\+[\\\\da-z\\\\-]+(?:\\\\.[\\\\da-z\\\\-]+)*)?';\nconst PREG = `^(?:(${NREG}):)?(?:(${NREG})\\/)?(${NREG})?(?:#?(${VREG})?)$`;\nconst REGX = new RegExp(PREG,'i');\n\nexport class Url {\n    static isValid(url:string){\n        return REGX.test(url);\n    }\n    static stringify(url:any):string{\n        if(!(url instanceof Url)){\n            url = new Url(url);\n        }\n        return url.toString();\n    }\n    static parse(url:string):Url{\n        return new Url(url)\n    }\n\n    public registry:string;\n    public vendor:string;\n    public project:string;\n    public version:string;\n    public url:string;\n\n    constructor(url:string|any,parent?:Url){\n        if(url && typeof url=='string'){\n            this.registry = parent?parent.registry :null;\n            this.vendor   = parent?parent.vendor   :null;\n            this.project  = parent?parent.project  :null;\n            this.version  = parent?parent.version  :null;\n            this.parse(url);\n        }else\n        if(url && typeof url=='object'){\n            this.registry = url.registry || parent.registry || null;\n            this.vendor   = url.vendor   || parent.vendor   || null;\n            this.project  = url.project  || parent.project  || null;\n            this.version  = url.version  || parent.version  || null;\n        }\n    }\n    public parse(url:string):boolean{\n        var match = url.match(REGX);\n        if(match){\n            this.registry = match[1]||this.registry;\n            this.vendor   = match[2]||this.vendor;\n            this.project  = match[3]||this.project;\n            this.version  = match[4]||this.version;\n            this.stringify();\n            return true;\n        }else{\n            return false;\n        }\n    }\n    public stringify():string{\n        return this.url = `${this.registry?this.registry+':':''}${\n            this.vendor?this.vendor+'/':''\n        }${\n            this.project?this.project:''\n        }${\n            (this.vendor||this.project)&& this.version?'#':''\n        }${\n            this.version?this.version:''\n        }`;\n    }\n    public toString(){\n        return `Lib(${this.url})`;\n    }\n}"
  ]
}