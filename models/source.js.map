{
  "version": 3,
  "file": "source.js",
  "sourceRoot": "/Users/Sergey/Work/GH/ecmal/elp/src",
  "sources": [
    "source.ts"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\nimport FileSystem from \"../utils/fs\";\nconst EXTS = {\n    '.d.ts'     : 'definition',\n    '.ts'       : 'source',\n    '.js.map'   : 'map',\n    '.js'       : 'script'\n};\n\nconst Crypto = system.node.require('crypto');\nexport class Source {\n    static isResource(ext):boolean{\n        return ['.ts','.d.ts','.js','.js.map'].indexOf(ext)<0;\n    }\n    static getHash(content){\n        return Crypto.createHash('md5').update(content).digest(\"hex\");\n    }\n    static getName(path){\n        var exts = Object.keys(EXTS);\n        for(var e of exts){\n            var i = path.lastIndexOf(e);\n            if(i>0 && i==path.length-e.length){\n                return path.substring(0,i)\n            }\n        }\n        if(path.lastIndexOf('.')>0){\n            return path.substring(0,path.lastIndexOf('.'));\n        }else{\n            return path;\n        }\n\n    }\n    static getExt(path){\n        var ext:string, exts = Object.keys(EXTS);\n        for(var e of exts){\n            var i = path.lastIndexOf(e);\n            if(i>=0 && i==path.length-e.length){\n                ext = e;\n                break;\n            }\n        }\n        if(!ext && path.lastIndexOf('.')>0){\n            ext = path.substring(path.lastIndexOf('.'));\n        }\n        return ext;\n    }\n    static getType(path){\n        var exts = Object.keys(EXTS);\n        for(var e of exts){\n            var i = path.lastIndexOf(e);\n            if(i==path.length-e.length){\n                return EXTS[e];\n            }\n        }\n        return 'resource'\n    }\n    public name:string;\n    public project:string;\n    public dirname:string;\n    public files:any;\n    public main:boolean;\n    get uri(){\n        return this.project+'/'+this.name;\n    }\n    get ts(){\n        return this.files['.ts'];\n    }\n    get js(){\n        return this.files['.js'];\n    }\n    get tsx(){\n        return this.files['.tsx']\n    }\n    get tsd(){\n        return this.files['.d.ts']\n    }\n    get map(){\n        return this.files['.js.map'];\n    }\n    get version(){\n        var file = (this.ts || this.tsx || this.tsd);\n        if(file && file.content){\n            return String(file.hash);\n        }\n    }\n    get content(){\n        var file = (this.ts || this.tsx || this.tsd);\n        if(file && file.content){\n            return file.content.toString();\n        }\n    }\n    get script(){\n        if(this.js){\n            return this.js.content.toString();\n        }\n    }\n\n    get resources(){\n        return Object.keys(this.files).filter(k=>Source.isResource(k)).map(k=>this.files[k])\n    }\n    get compilable(){\n        return !!(this.files['.ts'] || this.files['.tsx'])\n    }\n    constructor(project:string,name:string,main=true){\n        this.main = main;\n        this.project = project;\n        this.name = name;\n        this.files = {};\n    }\n    cleanMap(){\n        if(this.script) {\n            return this.script.replace(/\\n+\\/\\/#\\s+sourceMappingURL=(.*)\\n?/g, '').trim()\n        }\n    }\n    bundle(maps:boolean=false){\n        if(this.script){\n            if(this.map && this.map.content){\n                var mapBase64 = new Buffer(this.map.content.toString()).toString('base64');\n                return this.script.replace(/\\n+\\/\\/#\\s+sourceMappingURL=(.*)\\n?/g, `//# sourceMappingURL=data:application/json;charset=utf-8;base64,${mapBase64}`).trim()\n            }else{\n                return this.script.replace(/\\n+\\/\\/#\\s+sourceMappingURL=.*\\n?/g, ``).trim()\n            }\n        }\n    }\n    mapTo(dir){\n        if(this.map) {\n            var map = JSON.parse(this.map.content.toString());\n            delete map.sourceRoot;\n            map.sources = map.sources.map(s=> {\n                return s.replace(this.project+'/', './');\n            });\n            this.files['.js.map'].content = JSON.stringify(map);\n        }\n    }\n    addFile(file){\n        //console.info(file);\n        var old = this.files[file.ext];\n        if(!old){\n            old = this.files[file.ext] = {};\n        }\n        for(var i in file){\n            old[i] = file[i];\n        }\n        old.size = old.content.length;\n        old.hash = Source.getHash(old.content);\n    }\n\n    toString(full:boolean=false){\n        var fStr = '';\n        if(full){\n            for(var f in this.files){\n                var file = this.files[f];\n                fStr+=`\\n  ${[\n                    file.ext,\n                    file.hash,\n                    file.content.length\n                ].join('\\t')}`;\n            }\n        }\n        return `Source('${this.uri}',${this.main?'Y':'N'},[${full?fStr+'\\n':Object.keys(this.files).join(' ')}])`\n    }\n    toMetadata(){\n        var meta = {\n            name    : this.name,\n            version : this.version,\n            size    : this.js?this.js.size:undefined,\n            hash    : this.js?this.js.hash:undefined,\n            files   : {}\n        };\n        for(var ext in this.files){\n            var file = this.files[ext];\n            meta.files[ext] = {\n                size : file.size,\n                hash : file.hash,\n                sha  : file.sha\n            }\n        }\n        return meta;\n    }\n    protected inspect(){\n        return this.toString();\n    }\n}\n"
  ]
}