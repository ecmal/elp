{
  "version": 3,
  "file": "project.js",
  "sourceRoot": "/Users/Sergey/Work/GH/ecmal/elp/src",
  "sources": [
    "project.ts"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "import FileSystem from \"../utils/fs\";\nimport {Repository} from \"../utils/git\";\nimport {Remotes} from \"../utils/git\";\nimport {Status} from \"../utils/git\";\nimport {Compiler} from \"../compiler/compiler\";\n\nimport {Source} from \"./source\";\nimport {Registry} from \"./registry\";\nimport {Url} from \"./url\";\nimport {Library} from \"./library\";\n\n\nconst FILE:symbol = Symbol('file');\nconst CONFIG:symbol = Symbol('config');\nconst COMPILER:symbol = Symbol('compiler');\n//const WATCHER:symbol = Symbol('watcher');\nconst SOURCES:symbol = Symbol('sources');\nconst DEPS:symbol = Symbol('dependencies');\nconst REPO_SOURCE:symbol = Symbol('repo.source');\nconst REPO_RELEASE:symbol = Symbol('repo.release');\n\n\nexport type Sources = {[k:string]:Source};\nexport type Deps = {[k:string]:Project};\n\n\nexport class Project {\n\n    static read(path:string):Project{\n        let pack;\n        path = FileSystem.resolve(path);\n        if(!FileSystem.exists(path)){\n            console.error(`Invalid project path \"${path}\"`);\n        }\n        if(FileSystem.isDir(path)){\n            path = FileSystem.resolve(path,'package.json');\n        }\n        pack = new Project(path);\n        if(FileSystem.isFile(path)){\n            pack.patch(FileSystem.readJson(path));\n        }\n        return pack;\n    }\n\n    private [FILE]:string;\n    private [CONFIG]:any;\n    private [SOURCES]:Sources;\n    private [REPO_SOURCE]:Repository;\n    private [REPO_RELEASE]:Repository;\n    private [DEPS]:Deps;\n\n    get filename():string{\n        return this[FILE];\n    }\n    get dirname():string{\n        return FileSystem.dirname(this.filename);\n    }\n    get config():any{\n        var c=this[CONFIG];\n        if(!c){\n            c=this[CONFIG]={};\n        }\n        return c;\n    }\n    get sources():Sources{\n        var c=this[SOURCES];\n        if(!c){\n            c=this[SOURCES]={};\n        }\n        return c;\n    }\n    get sourcesAll():Source[]{\n        var sources:Source[] = this.sourcesSelf;\n        for(let d in this.deps){\n            let library = this.deps[d];\n            for(let s in library.sources){\n                sources.push(library.sources[s])\n            }\n        }\n        return sources;\n    }\n    get sourcesSelf():Source[]{\n        var sources:Source[] = [];\n        for(let s in this.sources){\n            sources.push(this.sources[s])\n        }\n        return sources;\n    }\n\n    get git():Repository{\n        var c=this[REPO_SOURCE];\n        if(!c && Repository.isGitDir(this.dirname)){\n            c = this[REPO_SOURCE] = new Repository(this.dirname);\n        }\n        return c;\n    }\n    get release():Repository{\n        var c:Repository=this[REPO_RELEASE];\n        if(!c && this.git){\n            c = this[REPO_RELEASE] = new Repository(this.outputDir);\n            var refs = this.git.refs();\n            if(!Repository.isGitDir(this.outputDir)){\n                this.git.exec('worktree','prune');\n                if(refs.heads.release){\n                    this.git.exec('worktree','add',this.outputDir,'release');\n                }else{\n                    var tempName = 'temp-'+Math.round(Math.random()*1000);\n                    this.git.exec('worktree','add','-b',tempName,this.outputDir);\n                    console.info(c.exec('checkout','--orphan','release').output);\n                    this.git.exec('branch','-d',tempName);\n                }\n                var refs = c.refs();\n                console.info(refs);\n            }\n        }else{\n            console.info(\"NOT RELEASE\",this.dirname,Repository.isGitDir(this.dirname))\n        }\n        return c;\n    }\n    get compiler():Compiler{\n        var c=this[COMPILER];\n        if(!c){\n            c = this[COMPILER] = new Compiler(this);\n        }\n        return c;\n    }\n    get remotes():Remotes{\n        return this.git.remotes();\n    }\n    get status():Status{\n        return this.git.status();\n    }\n    get deps():Deps{\n        return this[DEPS];\n    }\n    get format():string{\n        return this.config.format;\n    }\n    get target():string{\n        return this.config.target;\n    }\n    get bundle():string{\n        if(this.config.bundle){\n            return `package.js`;\n        }\n    }\n    get core():string{\n        return this.config.core || 'core';\n    }\n    get name():string{\n        return this.config.name;\n    }\n    get vendor():string{\n        return this.config.vendor;\n    }\n    get version():string{\n        return this.config.version;\n    }\n    get registry():string{\n        return this.config.registry;\n    }\n    set name(v:string){\n        this.config.name=v;\n    }\n    get dirs(){\n        if(!this.config.directories){\n            this.config.directories = {}\n        }\n        return this.config.directories;\n    }\n    get main():string{\n        return this.config.main?this.config.main:`${this.name}/package`;\n    }\n    constructor(path){\n        this[FILE] = path;\n    }\n\n    get sourceDir():string {\n        var srcDir = this.dirs.source;\n        if(!srcDir){\n            if(FileSystem.isDir(FileSystem.resolve(this.dirname,'./src'))){\n                srcDir = './src'\n            }else\n            if(FileSystem.isDir(FileSystem.resolve(this.dirname,'./source'))){\n                srcDir = './source'\n            }else\n            if(FileSystem.isDir(FileSystem.resolve(this.dirname,'./sources'))){\n                srcDir = './sources'\n            }\n            this.dirs.source = srcDir;\n        }\n        if(srcDir){\n            return FileSystem.resolve(this.dirname,srcDir);\n        }else{\n            throw new Error('source directory not specified');\n        }\n    }\n    get testsDir():string {\n        var testDir = this.dirs.tests;\n        if(!testDir){\n            if(FileSystem.isDir(FileSystem.resolve(this.dirname,'./test'))){\n                testDir = './test'\n            }else\n            if(FileSystem.isDir(FileSystem.resolve(this.dirname,'./tests'))){\n                testDir = './tests'\n            }\n            this.dirs.tests = testDir;\n        }\n        if(testDir){\n            return FileSystem.resolve(this.dirname,testDir);\n        }\n    }\n    set sourceDir(v:string){\n        this.dirs.source = FileSystem.relative(this.dirname,v);\n    }\n    get vendorDir():string {\n        var venDir = this.dirs.vendor;\n        if(!venDir){\n            venDir = this.dirs.vendor = './out';\n        }\n        return FileSystem.resolve(this.dirname,venDir);\n    }\n    get outputDir():string{\n        return FileSystem.resolve(this.vendorDir,this.name);\n    }\n\n    public patch(props:any){\n        for(var key in props){\n            this.config[key] = props[key];\n        }\n        return this;\n    }\n    public watch(tests:boolean=false){\n        tests = tests && !!this.testsDir;\n        this.clean();\n        this.readFs(tests);\n        this.watchSources(tests);\n        this.writeSources();\n        this.writePackage();\n    }\n    public compile(tests:boolean=false,bundle:string=null,exec:boolean=false){\n        if(bundle){\n            console.info(`Bundling${exec?' executable':''} ${bundle}`);\n        }\n        tests = tests && !!this.testsDir;\n        if(bundle){\n            this.readFs();\n            this.compileSources();\n            this.bundleSources(exec,bundle);\n        }else{\n            this.clean();\n            this.readFs(tests);\n            this.compileSources();\n            this.writeSources();\n            this.writePackage();\n        }\n    }\n    public install(){\n        Object.keys(this.config.libraries).forEach(k=>{\n            var key = Url.parse(k);\n            var url = Url.parse(this.config.libraries[k]);\n            if(!url.project){\n                url.project = key.project;\n            }\n            if(!url.vendor){\n                url.vendor = key.vendor || this.vendor;\n            }\n            if(!url.registry){\n                url.registry = key.registry || this.registry;\n            }\n            var library = Library.get(url);\n            if(!library.installed){\n                library.install();\n            }else{\n                library.fetch();\n            }\n            library.extract(this.vendorDir)\n        })\n    }\n    public publish(force?:boolean){\n        this.clean();\n        var stats  = this.git.status();\n        var refs = this.git.refs();\n        var num  = stats.local.commit.substring(0,6);\n        var com  = this.git.log(stats.local.commit,-1)[0];\n        var rem  = stats.remote.name;\n        var ver  = this.version;\n\n        var rel = `refs/releases/${ver}/${num}`;\n        //var name = 'T'+parseInt(Math.random()*1000);\n        //this.git.exec('worktree','prune');\n        //this.git.exec('worktree','add',this.outputDir,'-b',name);\n        var rels = refs.releases;\n        var tags = refs.tags;\n        if(force){\n            console.info(this.git.exec('update-ref','-d',rel));\n            console.info(this.git.push(rem,`:${rel}`));\n        }else\n        if(rels && rels[ver] && rels[ver][num]){\n            throw new Error(`Already published '${ver}/${num}'`);\n        }\n        if(tags && tags[ver]){\n            console.info(this.git.exec('tag','-d',ver));\n            console.info(this.git.push(rem,`:refs/tags/${ver}`));\n        }\n        var release = new Repository(this.outputDir);\n        release.init();\n        release.addRemote('origin',this.git.path);\n        release.head(rel);\n\n        //this.git.exec('branch','-d',name);\n        this.readGit();\n        this.compileSources();\n        this.writeSources();\n        this.writePackage();\n        var status = release.status();\n        var changes = status.changes;\n        var added = [], deleted = [];\n        if(!status.clear){\n            console.info(status);\n            for(var c in changes){\n                var change = changes[c];\n                if(change.untracked){\n                    added.push(change.path);\n                }\n                if(change.deleted){\n                    deleted.push(change.path);\n                }\n            }\n            if(added.length){\n                release.exec('add',...added);\n            }\n            if(deleted.length){\n                release.exec('rm',...deleted);\n            }\n            console.info(release.exec('commit','-am',com.subject));\n            status = release.status();\n\n            if(status.clear){\n               console.info(status);\n               console.info(release.push('origin',rel));\n               console.info(this.git.tag(ver,rel));\n               console.info(this.git.push(rem,rel,true));\n            }\n        }else{\n            console.info('No Changes');\n        }\n\n    }\n    public clean(){\n        FileSystem.removeDir(this.outputDir);\n    }\n    public toString(full=false):string{\n        return `Project(${this.name}${full?','+JSON.stringify(this.config,null,2):''})`;\n    }\n\n    private inspect(){\n        return this.toString(true)\n    }\n    private readFs(tests:boolean=false){\n        this.readDependencies();\n        this.readSourcesFromFs(tests);\n        return Object.keys(this.sources);\n    }\n    private readGit(branch?){\n        this.readDependencies();\n        this.readSourcesFromGit(branch);\n        return Object.keys(this.sources);\n    }\n\n    private readSourcesFromGit(branch='HEAD',main:boolean=true){\n        if(this.git){\n            var files = this.git.readDir(branch,this.dirs.source);\n            for(var f in files){\n                var file        = files[f];\n                file.from       = 'git';\n                file.name       = Source.getName(file.path);\n                file.ext        = Source.getExt(file.path);\n                if(file.ext){\n                    file.content    = this.git.readFile(file.sha);\n                    var source = this.sources[file.name];\n                    if(!source){\n                        source = this.sources[file.name] = new Source(this.name,file.name,main);\n                    }\n                    source.addFile(file);\n                }\n            }\n        }\n    }\n    private readSourcesFromFs(tests:boolean=false,main:boolean=false){\n        FileSystem.readDir(this.sourceDir,true).forEach(f=>{\n            var file:any = {\n                path : FileSystem.relative(this.sourceDir,f)\n            };\n            if(file.path!='package.json'){\n                file.from = 'file';\n                file.name = Source.getName(file.path);\n                file.ext = Source.getExt(file.path);\n                if(file.ext){\n                    file.content = FileSystem.readFile(f);\n                    var source = this.sources[file.name];\n                    if(!source){\n                        source = this.sources[file.name] = new Source(this.name,file.name,main);\n                    }\n                    source.addFile(file);\n                }\n            }\n        });\n        if(tests){\n            FileSystem.readDir(this.testsDir,true).forEach(f=>{\n                var file:any = {\n                    path : FileSystem.relative(this.testsDir,f)\n                };\n                if(file.path!='package.json'){\n                    file.from = 'file';\n                    file.name = Source.getName(file.path);\n                    file.ext = Source.getExt(file.path);\n                    if(file.ext){\n                        file.content = FileSystem.readFile(f);\n                        var source = this.sources[file.name];\n                        if(!source){\n                            source = this.sources[file.name] = new Source(this.name,file.name,main);\n                            source.dirname = FileSystem.dirname(f)\n                        }\n                        source.addFile(file);\n                    }\n                }\n            });\n        }\n    }\n    private readDependencies(){\n        var deps = {};\n        if(FileSystem.isDir(this.vendorDir)){\n            FileSystem.readDir(this.vendorDir,false,true).forEach(dir=>{\n                if(FileSystem.isDir(dir) && FileSystem.isFile(FileSystem.resolve(dir,'package.json'))){\n                    var project = Project.read(dir);\n                    if(project.name != this.name){\n                        project.patch({\n                            directories : {\n                                source  : '.',\n                                vendor  : '..'\n                            }\n                        });\n                        project.readSourcesFromFs(false,false);\n                        deps[project.name] = project;\n                    }\n                }\n            });\n        }\n        this[DEPS] = deps;\n    }\n    private compileSources(){\n        var diagnostics = this.compiler.compile();\n        if(diagnostics.length){\n            console.info('FAILED');\n        }else{\n            console.info('COMPILED');\n        }\n    }\n\n    private writeSources(){\n        this.sourcesSelf.forEach(s=>{\n            this.writeSource(s);\n        });\n    }\n    private watchSources(tests:boolean=false){\n        var diagnostics = this.compiler.compile();\n        if(diagnostics.length){\n            console.info('FAILED');\n        }else{\n            console.info('COMPILED');\n        }\n        var listener = (t,e,f)=>{\n            try{\n                var from = t?'test':'main';\n                var path = FileSystem.resolve(t?this.testsDir:this.sourceDir,f);\n                var file:any = {path:f};\n                if(FileSystem.exists(path)){\n                    file.from = 'file';\n                    file.name = Source.getName(file.path);\n                    file.ext = Source.getExt(file.path);\n                    if(file.ext){\n                        file.content = FileSystem.readFile(path).toString();\n                        var source = this.sources[file.name];\n                        if(!source){\n                            source = this.sources[file.name] = new Source(this.name,file.name,true);\n                            source.dirname = FileSystem.dirname(path)\n                        }\n                        source.addFile(file);\n                        var diagnostics = this.compiler.compile();\n                        if(diagnostics.length){\n                            console.info(`FAILED   ${from} : ${file.path}`);\n                        }else{\n                            console.info(`COMPILED ${from} : ${file.path}`);\n                        }\n                        if(this.bundle){\n                            this.writeSource(this.sources['package']);\n                        }else{\n                            this.writeSource(source);\n                        }\n                    }\n                }else{\n                    console.info(`DELETED  :${from} : ${file.path}`);\n                }\n            }catch(ex){\n                console.info(ex.stack);\n            }\n        };\n        console.info('WATCHING');\n        console.info(' * '+this.sourceDir);\n        FileSystem.watchDir(this.sourceDir,(e,f)=>listener(false,e,f),true);\n        if(tests){\n            console.info(' * '+this.testsDir);\n            FileSystem.watchDir(this.testsDir,(e,f)=>listener(true,e,f),true);\n        }\n    }\n\n    private bundleSources(exec?:boolean,filename?:string){\n        var runtime=[],sources=[];\n        this.sourcesAll.forEach(s=>{\n            if(s.script){\n                if(s.project=='runtime'){\n                    runtime.push(s.cleanMap());\n                }else{\n                    sources.push(s.cleanMap());\n                }\n            }\n        });\n        runtime = runtime.concat(sources);\n        runtime.push(`system.import(\"${this.main}\");`);\n        if(exec){\n            runtime.unshift('#!/usr/bin/env node');\n        }\n        var file = FileSystem.resolve(this.dirname,filename||'bundle.js');\n        FileSystem.writeFile(file,runtime.join('\\n'));\n    }\n    private writePackage(){\n        var json = this.compilePackage();\n        var packFile = FileSystem.resolve(this.vendorDir,this.name,'package.json');\n        var packContent = JSON.stringify(json,null,'  ');\n        FileSystem.writeFile(packFile,packContent);\n    }\n    private compilePackage():any{\n        var json:any = {\n            name        : this.name,\n            vendor      : this.vendor,\n            version     : this.version,\n            registry    : this.registry,\n            format      : this.format,\n            bundle      : !!this.bundle,\n            libraries   : this.config.libraries\n        };\n        if(this.git){\n            var status = this.git.status();\n            var config = this.git.config();\n            json.author = config.user;\n            if(status.remote){\n                json.commit = status.remote.commit;\n                var repoUrl = config.remote[status.remote.name].url;\n                json.repository = repoUrl;\n                json.registry = Registry.for(repoUrl).id;\n            }\n        }\n        json.modules = {};\n        this.sourcesSelf.forEach(s=>{\n            json.modules[s.name] = s.toMetadata();\n        });\n        return json;\n    }\n    private writeSource(s:Source){\n        for(var t of ['tsd','js','map']){\n            let file = s[t];\n            if(file){\n                var path = FileSystem.resolve(this.vendorDir,this.name,s.name+file.ext);\n                FileSystem.writeFile(path,file.content);\n            }\n        }\n        for(var file of s.resources){\n            var path = FileSystem.resolve(this.vendorDir,this.name,s.name+file.ext);\n            FileSystem.writeFile(path,file.content);\n        }\n    }\n\n}"
  ]
}