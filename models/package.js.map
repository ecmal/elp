{
  "version": 3,
  "file": "package.js",
  "sourceRoot": "/Users/Sergey/Work/GH/ecmal/elp/src",
  "sources": [
    "package.ts"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "import FileSystem from \"../utils/fs\";\n\nexport class Package {\n    static read(path:string){\n        let pack;\n        path = FileSystem.resolve(path);\n        if(!FileSystem.exists(path)){\n            console.error(`Invalid project path \"${path}\"`);\n        }\n        if(FileSystem.isDir(path)){\n            path = FileSystem.resolve(path,'package.json');\n        }\n        if(FileSystem.isFile(path)){\n            pack = new Package(path);\n        }\n        return pack;\n    }\n    private internal:any;\n    private json:any;\n    public path:string;\n\n    get name():string {\n        return this.json.name;\n    }\n    set name(v:string){\n        this.json.name=v;\n    }\n    get registry():string{\n        return this.json.registry;\n    }\n    set registry(v:string){\n        this.json.registry = v;\n    }\n    get vendor(){\n        return this.json.vendor;\n    }\n    get version(){\n        return this.json.version;\n    }\n    get directories(){\n        if(!this.json.directories){\n            this.json.directories = {\n                source : './source',\n                output : './output'\n            }\n        }\n        return this.json.directories;\n    }\n    get dirname(){\n        return FileSystem.dirname(this.filename);\n    }\n    get filename(){\n        return this.path;\n    }\n\n    get sourceDir():string {\n        return FileSystem.resolve(this.dirname,this.directories.source);\n    }\n    set sourceDir(v:string){\n        this.directories.source = FileSystem.relative(this.dirname,v);\n    }\n    get outputDir():string {\n        return FileSystem.resolve(this.dirname,this.directories.output);\n    }\n    set outputDir(v:string){\n        this.directories.output = FileSystem.relative(this.dirname,v);\n    }\n\n    patch(props:any){\n        for(var key in props){\n            this.json[key] = props[key];\n        }\n        return this;\n    }\n    constructor(path,json?){\n        this.path = path;\n        if(!this.json){\n            this.read(path);\n        }\n    }\n\n    clone():Package{\n        return new Package(this.path,JSON.parse(JSON.stringify(this.json)));\n    }\n    read(path){\n        this.json = FileSystem.readJson(path);\n    }\n    toJSON(){\n        return this.json;\n    }\n    write(path){\n        FileSystem.writeJson(path,this.clone().patch({\n            directories:{\n                source:'.',\n                output:'.'\n            }\n        }));\n    }\n\n}"
  ]
}