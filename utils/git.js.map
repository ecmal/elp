{
  "version": 3,
  "file": "git.js",
  "sourceRoot": "/Users/Sergey/Work/GH/ecmal/elp/src",
  "sources": [
    "git.ts"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "import {FileSystem} from \"./fs\";\n\nconst Cp                = system.node.require('child_process');\nconst URL               = system.node.require('url');\nconst process           = system.node.process;\nconst REFS:symbol       = Symbol('refs');\nconst TAGS:symbol       = Symbol('tags');\nconst BRANCHES:symbol   = Symbol('branches');\nconst REPO:symbol       = Symbol('repo');\n\nexport abstract class Entity {\n\n    protected [REPO]:Repository;\n    public get repo():Repository{\n        return this[REPO];\n    }\n\n    constructor(repo:Repository){\n        this[REPO] = repo;\n    }\n\n    abstract parse(data:string):any;\n}\n\nexport class Remote extends Entity {\n\n    protected [REFS]:{[key:string]:string};\n    protected [BRANCHES]:string[];\n    protected [TAGS]:string[];\n\n    public get refs():{[key:string]:string}{\n        return this[REFS];\n    }\n    public get branches():string[]{\n        var list = this[BRANCHES];\n        if(!list){\n            list = this[BRANCHES]=[];\n            for(var ref in this.refs){\n                var arr = ref.match(/^refs\\/heads\\/(.*)$/);\n                if(arr){\n                    list.push(arr[1]);\n                }\n            }\n        }\n        return list;\n    }\n    public get tags():string[]{\n        var list = this[TAGS];\n        if(!list){\n            list = this[TAGS]=[];\n            for(var ref in this.refs){\n                var arr = ref.match(/^refs\\/tags\\/(.*)$/);\n                if(arr){\n                    list.push(arr[1]);\n                }\n            }\n        }\n        return list;\n    }\n    hasTag(name){\n        return this.tags.indexOf(name)>=0;\n    }\n    hasBranch(name){\n        return this.branches.indexOf(name)>=0;\n    }\n    inspect(){\n        return {\n            refs     : this.refs,\n            branches : this.branches,\n            tags     : this.tags\n        }\n    }\n    parse(data:string):Remote {\n        var refs = this[REFS] = {};\n        data.trim().split('\\n').forEach(l=>{\n            var r = l.trim().split(/\\s+/);\n            refs[r[1]]=r[0];\n        });\n        return this;\n    }\n}\n\n\nexport class Status {\n\n    local   : any;\n    remote  : any;\n    ahead   : number;\n    changes : any;\n    initial : boolean;\n    clear   : boolean;\n\n    constructor(status) {\n        var line,item,whitespace = /\\s+/;\n        var lines = status.trim().split('\\n');\n        var thead = lines.shift().trim();\n        var initial = thead.match(/##\\sInitial\\scommit\\son\\s(.*)\\s*/)\n        if(initial){\n            this.initial = true;\n            this.local = initial[1]\n        }else{\n            thead = thead.replace('...',' ');\n            thead = thead.replace(/(#|\\s)+/,'');\n            thead = thead.replace(/\\[ahead\\s(\\d+)\\]/,'$1');\n            thead = thead.trim().split(/\\s+/);\n            if(thead[0]){\n                var local = thead[0];\n                this.local = {\n                    branch  : local\n                };\n            }\n            if(thead[1]){\n                var parts  = thead[1].split('/');\n                var remote = parts[0];\n                var branch = parts[1];\n                this.remote = {\n                    branch  : branch,\n                    name    : remote\n                };\n            }\n            if(thead[2]){\n                this.ahead = thead[2]?parseInt(thead[2]):0;\n            }\n\n        }\n\n        var changes = {};\n        while (line = lines.shift()) {\n            item = {};\n            line = line.trim().split(whitespace);\n            var actions = line.shift();\n            item.path = line.shift();\n            if(actions.indexOf('A')>=0){\n                item.added = true;\n            }\n            if(actions.indexOf('M')>=0){\n                item.modified = true;\n            }\n            if(actions.indexOf('D')>=0){\n                item.deleted = true;\n            }\n            if(actions.indexOf('R')>=0){\n                line.shift();\n                item.renamed = true;\n                item.from = item.path;\n                item.path = line.shift();\n            }\n            if(actions.indexOf('!')>=0){\n                item.ignored = true;\n            }\n            if(actions.indexOf('?')>=0){\n                item.untracked = true;\n            }\n            changes[item.path] = item;\n        }\n        var files = Object.keys(changes).sort((a,b)=>{\n            if(a.indexOf('/')>0 && b.indexOf('/')<0){\n                return -1;\n            }else\n            if(a.indexOf('/')<0 && b.indexOf('/')>0){\n                return 1;\n            }else{\n                return a==b?0:(a<b?-1:1);\n            }\n        });\n        if(files.length) {\n            this.clear = false;\n            this.changes = {};\n            files.forEach(f=> {\n                this.changes[f] = changes[f];\n            })\n        }else{\n            this.clear = true;\n        }\n    }\n}\n\nexport interface Remote {\n    name:string;\n}\nexport interface Remotes {\n    [k:string]:Remote;\n}\n\nexport class Repository {\n    static refs(url:string){\n        return Repository.parseRefs(new Repository(process.cwd()).exec('ls-remote',url).output)\n    }\n    static clear(dir){\n        var gidDir = FileSystem.resolve(dir,'.git');\n        FileSystem.readDir(dir,false,true).forEach(f=>{\n            if(f!=gidDir){\n                if(FileSystem.isDir(f)){\n                    FileSystem.removeDir(f);\n                }else{\n                    FileSystem.removeFile(f);\n                }\n            }\n        })\n    }\n    private static parseRefs(text:string){\n        var refs:any = {};\n        text.trim().split('\\n').forEach(r=>{\n            var [sha,ref] = r.trim().split(/\\s+/);\n            var a = ref.split('/');\n            var t = a.shift();\n            var type = a.shift();\n            var name = a.join('/');\n            if(t=='HEAD'){\n                refs.head = sha;\n            }else{\n                if(!refs[type]){\n                    refs[type]={[name]:sha}\n                }else{\n                    refs[type][name]=sha;\n                }\n            }\n        });\n        if(refs.remotes){\n            var remotes = {};\n            Object.keys(refs.remotes).forEach(k=>{\n                var sha = refs.remotes[k];\n                var [remote,name] = k.split('/');\n                delete refs.remotes[k];\n                if(name=='HEAD'){\n                    if(!remotes[remote]){\n                        remotes[remote] = {head:sha}\n                    }else{\n                        remotes[remote].head = sha\n                    }\n                }else{\n                    var heads;\n                    if(!remotes[remote]){\n                        remotes[remote] = heads = {heads:{}}\n                    }else{\n                        remotes[remote].heads = heads = {}\n                    }\n                    heads[name] = sha;\n                }\n\n            });\n            refs.remotes = remotes;\n        }\n        if(refs.releases){\n            var releases = {};\n            Object.keys(refs.releases).forEach(k=>{\n                var sha = refs.releases[k];\n                var [ver,commit] = k.split('/');\n                delete refs.releases[k];\n                var commits = releases[ver];\n                if(!commits){\n                    commits = releases[ver]= {}\n                }\n                commits[commit] = sha;\n            });\n            refs.releases = releases;\n        }\n        return refs;\n    }\n    static isGitDir(path):boolean{\n        return FileSystem.exists(FileSystem.resolve(path,'.git'));\n    }\n    public path:string;\n\n    get base():string{\n        return FileSystem.resolve(this.path,'.git');\n    };\n\n    exec(...args){\n        var binary = false;\n        var params = args.filter(a=>{\n            if(a=='--binary'){\n                return !(binary=true);\n            }else{\n                return !!a\n            }\n        });\n        var result = Cp.spawnSync('git',params,{\n            cwd : this.path\n        });\n        var output:string;\n        if(result.output){\n            output = result.output.filter(i=>(i && i.length>0)).map(i=>i.toString()).join('');\n        }\n        if(!binary && output){\n            output = output.toString();\n        }\n        if(!!result.status){\n            throw new Error(`Failed To Execute \"git ${params.join(' ')}\" for \"${this.path}\"\\n\\n`+output);\n        }\n        return {\n            status  : !result.status,\n            command : 'git '+params.join(' '),\n            output  : output\n        };\n    }\n    hook(name,content){\n        var file,gitDir = this.path;\n        if(FileSystem.extname(gitDir)=='.git'){\n            file = FileSystem.resolve(this.path,'hooks',name);\n        }else{\n            file = FileSystem.resolve(this.base,'hooks',name);\n        }\n        console.info('INSTALL HOOK',name,file);\n        FileSystem.writeFile(file, content);\n        FileSystem.chmodFile(file, '755');\n    }\n    head(ref:string){\n        var gitDir = this.base;\n        if(FileSystem.isFile(gitDir)){\n            gitDir = FileSystem.readFile(gitDir).toString().replace('gitdir:','').trim();\n        }\n        if(FileSystem.isDir(gitDir)){\n            FileSystem.writeFile(FileSystem.resolve(gitDir,'HEAD'),`ref: ${ref}`);\n        }else{\n            throw new Error(`Not a git dir '${gitDir}'`);\n        }\n    }\n    config():any{\n        var fm = {},mp={};\n        this.exec('config','-l').output.trim().split('\\n').forEach(p=>{\n            var [key,val] = p.split('=');\n            if(fm[key]){\n                if(Array.isArray(fm[key])){\n                    fm[key].push(val);\n                }else {\n                    fm[key] = [fm[key],val];\n                }\n            }else{\n                fm[key] = val;\n            }\n        });\n        Object.keys(fm).forEach(k=>{\n            var path = k.split('.');\n            var root = mp,key;\n            while(key=path.shift()){\n                if(path.length){\n                    root = root[key] = (root[key] || {})\n                }else{\n                    var val = fm[k];\n                    if(typeof val=='string'){\n                        if(val.match(/^(true|false)$/)){\n                            val = (fm[k]==true);\n                        }else\n                        if(val.match(/^\\d+$/)){\n                            val = parseInt(fm[k]);\n                        }else\n                        if(val.match(/^\\d+\\.\\d+$/)){\n                            val = parseFloat(fm[k]);\n                        }\n                    }\n                    root[key] = val;\n                }\n            }\n        });\n        return mp;\n    }\n    getRemote(remote:string,pattern?:string){\n        var result = this.exec('ls-remote','--tags','--heads',remote,pattern);\n        if(result.output){\n            return new Remote(this).parse(result.output);\n        }else{\n            throw new Error(`Invalid remote \"${remote}\" ${result.output}`)\n        }\n    }\n\n    hasRemote(name):boolean {\n        return !!this.remotes()[name];\n    }\n    addRemote(name,url,...options):void{\n        this.exec('remote','add',...options,name,url);\n    }\n\n    constructor(path:string){\n        this.path = path;\n    }\n    get initialized():boolean {\n        return FileSystem.isDir(this.path) && (\n            FileSystem.isFile(FileSystem.resolve(this.path,'config')) ||\n            FileSystem.isFile(FileSystem.resolve(this.path,'.git','config'))\n        );\n    }\n    clear(){\n        Repository.clear(this.path);\n    }\n    init():boolean{\n        if(!FileSystem.isDir(this.path)){\n            FileSystem.createDir(this.path,true);\n        }\n        if(!FileSystem.isDir(this.base)){\n            if(FileSystem.extname(this.path)=='.git'){\n                this.exec('init','--bare');\n            }else{\n                this.exec('init');\n            }\n            return true;\n        }else{\n            return false;\n        }\n    }\n    fetch(remote,branch?){\n        if(branch){\n            return this.exec('fetch',remote,branch).output;\n        }else{\n            return this.exec('fetch',remote).output;\n        }\n    }\n\n    remote(name):string{\n        return this.exec('remote','show',name).output;\n    }\n    remotes():Remotes{\n        var remotes:Remotes = {};\n        this.exec('remote','-v').output.trim().split('\\n').forEach(r=>{\n            var row = r.trim();\n            if(row){\n                var [name,url,type] = row.split(/\\s+/);\n                var remote:any = remotes[name];\n                if(!remote){\n                    remote = remotes[name]=<Remote>{name};\n                }\n                remote[type.replace(/^\\((.*)\\)$/,'$1')] = url;\n            }\n        });\n        for(var r in remotes){\n            var remote:any = remotes[r];\n            var refs=Repository.parseRefs(this.exec('ls-remote',r).output);\n            for(var i in refs){\n                remote[i] = refs[i];\n\n            }\n            var url = URL.parse(remote.fetch || remote.push);\n            delete url.auth;\n            remote.url = URL.format(url);\n        }\n        return remotes;\n    }\n    status():Status {\n        var status = new Status(this.exec('status', '--porcelain', '--branch', '--untracked-files=all').output);\n        if(status.local && status.local.branch){\n            status.local.commit = this.rev(status.local.branch)\n        }\n        if(status.remote && status.remote.branch){\n            status.remote.commit = this.rev(status.remote.name+'/'+status.remote.branch);\n        }\n        return status;\n    }\n    rev(name){\n        return String(this.exec('rev-parse',name).output).trim()\n    }\n    refs(remote?){\n        if(remote){\n            return Repository.parseRefs(this.exec('ls-remote',remote).output)\n        }else{\n            return Repository.parseRefs(this.exec('show-ref','--head').output);\n        }\n    }\n    readDir(branch='HEAD',base?){\n        var tree = branch,ref='head';\n        if(!tree.match(/^[a-f0-9]{40}$/)){\n            var refs = this.refs();\n            if(tree=='HEAD'){\n                tree = refs.head;\n                for(var name in refs.heads){\n                    if(refs.head == refs.heads[name]){\n                        ref = 'branch';\n                        branch = name;\n                        break;\n                    }\n                }\n            }else\n            if(refs.heads[tree]){\n                ref = 'branch';\n                tree = refs.heads[tree];\n            }else\n            if(refs.tags[tree]){\n                ref = 'tag';\n                tree = refs.tags[tree];\n            }\n        }\n\n        var files = {};\n        this.exec('ls-tree','-rl',branch+(base?':'+base:'')).output.trim().split('\\n').forEach(l=>{\n            var [mode,type,sha,size,path] = l.split(/\\s+/);\n            files[path] = {\n                path    : path,\n                type    : type,\n                sha     : sha,\n                tree    : tree,\n                ref     : ref,\n                branch  : branch,\n                base    : 'git:'+branch+':/'+base,\n                git     : this.path,\n                mode    : parseInt(mode),\n                size    : parseInt(size)\n            };\n        });\n        return files;\n    }\n    readFile(branch,path?){\n        return this.exec('show','--binary',path?branch+':'+path:branch).output;\n    }\n    log(obj?:string,count?:number):any {\n        var header = ['sha','tree','parent','commit.date'];\n        var format = '%H,%T,%P,%aI,%s,%b,%D,%N,%an,%ae'.split(',').join('\\u001F');\n        var options = [];\n        if(obj){\n            options.push(obj)\n        }\n        if(typeof count=='number'){\n            options.push(count)\n        }\n        return this.exec('log', \"--pretty=format:\"+format,...options).output.split('\\n').map(l=>{\n            var r:any = l.split('\\u001F');\n            r = {\n                commit    : r[0],\n                tree      : r[1],\n                parent    : r[2],\n                date      : new Date(r[3]),\n                subject   : r[4],\n                body      : r[5],\n                refs      : r[6],\n                notes     : r[7],\n                author    : {\n                    name  : r[8],\n                    email : r[9],\n                }\n            };\n            for(var i in r){\n                if(r[i]===''){\n                    delete r[i];\n                }\n            }\n            return r;\n        });\n    }\n\n    tag(name,ref?){\n        var result;\n        if(ref){\n            result = this.exec('tag',name,ref)\n        }else{\n            result = this.exec('tag',name)\n        }\n        return result.output;\n    }\n    push(remote,ref,tags?:boolean){\n        var result;\n        if(tags){\n            result = this.exec('push',remote,'--tags',ref)\n        }else{\n            result = this.exec('push',remote,ref)\n        }\n        return result.output;\n    }\n    public toString(){\n        return `Git(${this.base})`;\n    }\n    protected inspect(){\n        return this.toString()\n    }\n}\n"
  ]
}