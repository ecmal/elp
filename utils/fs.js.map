{
  "version": 3,
  "file": "fs.js",
  "sourceRoot": "/Users/Sergey/Work/GH/ecmal/elp/src",
  "sources": [
    "fs.ts"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\nexport class FileSystem {\n    private static fs = system.node.require('fs');\n    private static path = system.node.require('path');\n    private static crypto = system.node.require('crypto');\n    static resolve(...paths:string[]):string{\n        return this.path.resolve(...paths);\n    }\n    static relative(base:string,path:string):string{\n        return this.path.relative(base,path);\n    }\n    static basename(path:string,ext?:string):string{\n        return this.path.basename(path,ext);\n    }\n    static dirname(path:string):string{\n        return this.path.dirname(path);\n    }\n    static extname(path:string){\n        return this.path.extname(path);\n    }\n    static exists(path){\n        return this.fs.existsSync(path)\n    }\n    static stats(path){\n        return this.fs.statSync(path);\n    }\n    static isDir(path){\n        return this.exists(path) && this.stats(path).isDirectory();\n    }\n    static isFile(path){\n        return this.exists(path) && this.stats(path).isFile();\n    }\n    static cleanDir(path,filter?:(f:string)=>boolean){\n        if( this.fs.existsSync(path) ) {\n            var files = this.fs.readdirSync(path);\n            if(filter){\n                files = files.filter(filter);\n            }\n            files.forEach((file,index)=>{\n                var curPath = path + \"/\" + file;\n                if(this.fs.lstatSync(curPath).isDirectory()) { // recurse\n                    this.cleanDir(curPath,filter);\n                } else { // delete file\n                    this.fs.unlinkSync(curPath);\n                }\n            });\n            if(this.fs.readdirSync(path).length==0){\n                this.fs.rmdirSync(path);\n            }\n        }\n    }\n    static removeDir(path){\n        if( this.fs.existsSync(path) ) {\n            this.fs.readdirSync(path).forEach((file,index)=>{\n                var curPath = path + \"/\" + file;\n                if(this.fs.lstatSync(curPath).isDirectory()) { // recurse\n                    this.removeDir(curPath);\n                } else { // delete file\n                    this.removeFile(curPath);\n                }\n            });\n            this.fs.rmdirSync(path);\n        }\n    }\n    static copyDir(fromDir,toDir){\n        this.readDir(fromDir,true).forEach(f=>{\n            var t = FileSystem.resolve(toDir,FileSystem.relative(fromDir,f));\n            this.copyFile(f,t);\n        })\n    }\n    static readDir(dir,recursive=false,includeDirs=false) {\n        var items = this.fs.readdirSync(dir).map((s)=>{\n            return this.path.resolve(dir,s);\n        });\n        var files=[],dirs=[];\n        items.forEach((f)=>{\n            if(this.fs.statSync(f).isDirectory()){\n                dirs.push(f);\n            }else{\n                files.push(f);\n            }\n        });\n        if(recursive) {\n            dirs.forEach((d)=> {\n                files = files.concat(this.readDir(d,recursive));\n            });\n        }\n        if(includeDirs){\n            files = dirs.concat(files)\n        }\n        return files;\n    }\n    static watchDir(path,cb:(e:string,f:string)=>void,recursive=true):any{\n        return this.fs.watch(path,{ persistent: true, recursive },cb);\n    }\n    static createDir(path,recursive=false){\n        if(recursive){\n            var parts = this.path.normalize(path).split(this.path.sep);\n            path = '';\n            for (var i = 0; i < parts.length; i++) {\n                path += parts[i] + this.path.sep;\n                if (!this.fs.existsSync(path)) {\n                    this.fs.mkdirSync(path, 0x1FD);\n                }\n            }\n        }else {\n            this.fs.mkdirSync(path);\n        }\n    }\n    static removeFile(path){\n        this.fs.unlinkSync(path)\n    }\n    static copyFile(fromPath,toPath) {\n        this.writeFile(toPath,this.readFile(fromPath));\n    }\n    static chmodFile(path:string,mode:string){\n        this.fs.chmodSync(path, parseInt(mode,8));\n    }\n    static writeFile(path:string,data:any){\n        var dirname = this.dirname(path);\n        if(!this.exists(dirname)){\n            this.createDir(dirname,true);\n        }\n        if(typeof data == 'string'){\n            return this.fs.writeFileSync(path,data,'utf8');\n        }else{\n            return this.fs.writeFileSync(path,data,'binary');\n        }\n    }\n    static writeJson(path:string,data:any){\n        return this.writeFile(path,JSON.stringify(data,null,'  ')+'\\n');\n    }\n    static readFile(path:string):any {\n        return this.fs.readFileSync(path);\n    }\n    static readFileHash(path:string):string{\n        return this.crypto.createHash('md5').update(this.readFile(path)).digest(\"hex\");\n    }\n    static readJson(path:string):any {\n        return JSON.parse(this.fs.readFileSync(path,'utf8').toString());\n    }\n}\nexport default FileSystem;"
  ]
}